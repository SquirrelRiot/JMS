@{
    ViewBag.Title = "About";
}

<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>

<p>Use this area to provide additional information.</p>


<button type="button" id="checkIn1" style="color:black">check in1</button>

<button type="button" id="checkIn2" style="color:black">check in2</button>

@section scripts {

    <script type="text/javascript" src="http://maps.google.com/maps/api/js?libraries=geometry&sensor=false&language=en"></script>
    <script src="~/Scripts/sweetalert.min.js"></script>
    <script type="text/javascript">

        $('#checkIn1').on('click', getLocation1);

        $('#checkIn2').on('click', getLocation2);

        //Check-In Failure
        function getLocation1() {
            console.log("I'm reacting");
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(calculateLocation1, showError);
            } else {
                x.innerHTML = "Geolocation is not supported by this browser.";
            }
        };

        calculateLocation1 = function(position) {
            var userLat = position.coords.latitude;
            var userLon = position.coords.longitude;

            var courtHouseLat = 33.9581644;
            var courtHouseLon = -118.23149890000002;

            userLocation = userLat + "," + userLon;
            console.log(userLocation);

            LatLng1 = new google.maps.LatLng({ lat: userLat, lng: userLon });
            latLng2 = new google.maps.LatLng({ lat: courtHouseLat, lng: courtHouseLon });

            computeDistance1(LatLng1, latLng2);
        }

        computeDistance1 = function(L1, L2) {
            distance = google.maps.geometry.spherical.computeDistanceBetween(L1, L2);
            console.log(distance + " " + "meters");

            if (distance > 9.144) {
                failure();
            } else {
                success();
            }
        }

        //Check-In Success
        function getLocation2() {
            console.log("I'm reacting");
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(calculateLocation2, showError);
            } else {
                x.innerHTML = "Geolocation is not supported by this browser.";
            }
        };

        calculateLocation2 = function(position) {
            var userLat = position.coords.latitude;
            var userLon = position.coords.longitude;

            var courtHouseLat = 33.951113299999996;
            var courtHouseLon = -118.24973859999999;

            userLocation = userLat + "," + userLon;
            console.log(userLocation);

            LatLng1 = new google.maps.LatLng({ lat: userLat, lng: userLon });
            latLng2 = new google.maps.LatLng({ lat: courtHouseLat, lng: courtHouseLon });

            computeDistance2(LatLng1, latLng2);
        }

        computeDistance2 = function(L1, L2) {
            distance = google.maps.geometry.spherical.computeDistanceBetween(L1, L2);
            console.log(distance + " " + "meters");

            if (distance > 9.144) {
                failure();
            } else {
                success();
            }
        }

        //Callbacks
        function success() {
            d = new Date();
            date = d.toLocaleDateString();
            time = d.toLocaleTimeString();
            timeStamp = date + " " + time;

            console.log(timeStamp);

            swal({
                title: "Thank You! You are now checked in! ",
                text: "Your time stamp: " + timeStamp,
                type: "success",
            }, 
            function() { window.location.assign("http://localhost:50896/Home/Info"); });
        }

        function failure() {
            swal({
                title: "Error!",
                text: "You need to be at the assigned courthouse in order to check-in.",
                type: "error",
            }, 
           function () { window.location.reload(); });
        }

        function showError(error) {
            switch (error.code) {
                case error.PERMISSION_DENIED:
                    x.innerHTML = "User denied the request for Geolocation."
                    break;
                case error.POSITION_UNAVAILABLE:
                    x.innerHTML = "Location information is unavailable."
                    break;
                case error.TIMEOUT:
                    x.innerHTML = "The request to get user location timed out."
                    break;
                case error.UNKNOWN_ERROR:
                    x.innerHTML = "An unknown error occurred."
                    break;
            }
        }


    </script>

}